[{"path":"https://ncahill89.github.io/BTF/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 BTF authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ncahill89.github.io/BTF/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://ncahill89.github.io/BTF/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2022). BTF: Package (Title Case). R package version 0.1.0, https://ncahill89.github.io/BTF/.","code":"@Manual{,   title = {BTF: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2022},   note = {R package version 0.1.0},   url = {https://ncahill89.github.io/BTF/}, }"},{"path":"https://ncahill89.github.io/BTF/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"What the Package Does (Title Case)","text":"package requires installation JAGS software. Click download JAGS.","code":""},{"path":"https://ncahill89.github.io/BTF/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"package currently cran can download Github. Make sure devtools package installed execute following: can load BTF package using library function.","code":"devtools::install_github(\"ncahill89/BTF\") library(BTF)"},{"path":"https://ncahill89.github.io/BTF/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"What the Package Does (Title Case)","text":"See Vignette.","code":""},{"path":"https://ncahill89.github.io/BTF/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"What the Package Does (Title Case)","text":"options use package default contain data New Jersey, USA. Alternatively, can supply data. supplying data, use package defaults templates formatting. ’ll find details vignette.","code":""},{"path":"https://ncahill89.github.io/BTF/reference/ConstructMCMCArray.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in JAGS objects — ConstructMCMCArray","title":"Read in JAGS objects — ConstructMCMCArray","text":"Read JAGS objects constructs mcmc.array, saved output.","code":""},{"path":"https://ncahill89.github.io/BTF/reference/ConstructMCMCArray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in JAGS objects — ConstructMCMCArray","text":"","code":"ConstructMCMCArray(   ChainIDs,   n.samplestot.max = 15000,   core.run = FALSE,   use.informative.priors = FALSE )"},{"path":"https://ncahill89.github.io/BTF/reference/ConstructMCMCArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in JAGS objects — ConstructMCMCArray","text":"ChainIDs Optional: specify chains include (use want exclude chain crashed, finished yet). n.samplestot.max Maximum number posterior samples save core.run Set TRUE running core data use.informative.priors Set TRUE using informative priors","code":""},{"path":"https://ncahill89.github.io/BTF/reference/ConstructMCMCArray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in JAGS objects — ConstructMCMCArray","text":"Invisible","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_core_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Core species counts from New Jersey, USA. — NJ_core_species","title":"Core species counts from New Jersey, USA. — NJ_core_species","text":"dataset containing raw core counts foraminifera species field study sites New Jersey, USA","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_core_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core species counts from New Jersey, USA. — NJ_core_species","text":"","code":"NJ_core_species"},{"path":"https://ncahill89.github.io/BTF/reference/NJ_core_species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Core species counts from New Jersey, USA. — NJ_core_species","text":"data frame 69 rows 24 variables: Depth core deth, cm","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_core_species.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Core species counts from New Jersey, USA. — NJ_core_species","text":"https://cp.copernicus.org/articles/12/525/2016/","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Modern elevations from New Jersey, USA. — NJ_modern_elevation","title":"Modern elevations from New Jersey, USA. — NJ_modern_elevation","text":"dataset containing elevations corresponding modern assemblages field study sites New Jersey, USA","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_elevation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modern elevations from New Jersey, USA. — NJ_modern_elevation","text":"","code":"NJ_modern_elevation"},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_elevation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modern elevations from New Jersey, USA. — NJ_modern_elevation","text":"data frame 175 rows 3 variables: Site Name field site SampleID ID sample SWLI Standardised water level index (standardised elevation)","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_elevation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modern elevations from New Jersey, USA. — NJ_modern_elevation","text":"https://cp.copernicus.org/articles/12/525/2016/","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Modern species counts from New Jersey, USA. — NJ_modern_species","title":"Modern species counts from New Jersey, USA. — NJ_modern_species","text":"dataset containing raw modern counts foraminifera species field study sites New Jersey, USA","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modern species counts from New Jersey, USA. — NJ_modern_species","text":"","code":"NJ_modern_species"},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modern species counts from New Jersey, USA. — NJ_modern_species","text":"data frame 175 rows 23 variables:","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_modern_species.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modern species counts from New Jersey, USA. — NJ_modern_species","text":"https://cp.copernicus.org/articles/12/525/2016/","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior elevation ranges for core assemblages — NJ_priors","title":"Prior elevation ranges for core assemblages — NJ_priors","text":"dataset containing upper lower bounds core elevations based secondary proxy field study sites New Jersey, USA","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior elevation ranges for core assemblages — NJ_priors","text":"","code":"NJ_priors"},{"path":"https://ncahill89.github.io/BTF/reference/NJ_priors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prior elevation ranges for core assemblages — NJ_priors","text":"data frame 69 rows 3 variables: Depth core depth, cm prior_lwr elevation lower bound prior_upr elevarion upper bound","code":""},{"path":"https://ncahill89.github.io/BTF/reference/NJ_priors.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Prior elevation ranges for core assemblages — NJ_priors","text":"https://cp.copernicus.org/articles/12/525/2016/","code":""},{"path":"https://ncahill89.github.io/BTF/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ncahill89.github.io/BTF/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ncahill89.github.io/BTF/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ncahill89.github.io/BTF/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://ncahill89.github.io/BTF/reference/response_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Species Response Curves — response_curves","title":"Create Species Response Curves — response_curves","text":"Create Species Response Curves","code":""},{"path":"https://ncahill89.github.io/BTF/reference/response_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Species Response Curves — response_curves","text":"","code":"response_curves(modern_mod, species_select = NULL)"},{"path":"https://ncahill89.github.io/BTF/reference/response_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Species Response Curves — response_curves","text":"modern_mod object class BTF run_modern species_select vector species names want create response curves","code":""},{"path":"https://ncahill89.github.io/BTF/reference/response_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Species Response Curves — response_curves","text":"Response curve data files (empirical model) SRC plots","code":""},{"path":"https://ncahill89.github.io/BTF/reference/response_curves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Species Response Curves — response_curves","text":"","code":"test_modern_mod <- run_modern(modern_elevation = NJ_modern_elevation,                          modern_species = NJ_modern_species,                           n.iter = 10,                           n.burnin = 1,                           n.thin = 1) #> Start chain ID  1  #> module glm loaded #> module dic loaded #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 1 has finished!  #> Start chain ID  2  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 2 has finished!  #> Start chain ID  3  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 3 has finished!  #> Run complete!  #> Error in sample.int(x, size, replace, prob): invalid 'size' argument response_curves(test_modern_mod) #> Error in response_curves(test_modern_mod): object 'test_modern_mod' not found"},{"path":"https://ncahill89.github.io/BTF/reference/run_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the core model — run_core","title":"Run the core model — run_core","text":"Run core model","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the core model — run_core","text":"","code":"run_core(   obj,   core_species = NULL,   prior_el = NULL,   ChainNums = seq(1, 3),   n.iter = 15000,   n.burnin = 1000,   n.thin = 7,   validation.run = FALSE,   use_uniform_prior = FALSE )"},{"path":"https://ncahill89.github.io/BTF/reference/run_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the core model — run_core","text":"obj object class BTF run_modern core_species dataframe containing core species counts prior_el prior elevations available ChainNums number MCMC chains n.iter number MCMC iterations n.burnin number burnin MCMC samples n.thin number thinning validation.run Set TRUE running validation use_uniform_prior change prior elevation uniform","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the core model — run_core","text":"Output saved output.dir","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the core model — run_core","text":"","code":"test_modern_mod <- run_modern(modern_elevation = NJ_modern_elevation,                               modern_species = NJ_modern_species,                               n.iter = 10,                               n.burnin = 1,                               n.thin = 1) #> Start chain ID  1  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 1 has finished!  #> Start chain ID  2  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 2 has finished!  #> Start chain ID  3  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 3 has finished!  #> Run complete!  #> Error in sample.int(x, size, replace, prob): invalid 'size' argument test_core_mod <- run_core(test_modern_mod,                           core_species = NJ_core_species,                           n.iter = 10,                           n.burnin = 1,                           n.thin = 1) #> Error in sort_core(core_dat = select(core_dat, -\"Depth\"), species_names = obj$species_names): object 'test_modern_mod' not found"},{"path":"https://ncahill89.github.io/BTF/reference/run_modern.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the modern (calibration) model — run_modern","title":"Run the modern (calibration) model — run_modern","text":"Run modern (calibration) model","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_modern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the modern (calibration) model — run_modern","text":"","code":"run_modern(   modern_elevation = NULL,   modern_species = NULL,   dx = 0.1,   ChainNums = seq(1, 3),   n.iter = 40000,   n.burnin = 10000,   n.thin = 15,   validation.run = FALSE,   sigma_z_priors = NULL,   scale_x = FALSE,   fold = 1 )"},{"path":"https://ncahill89.github.io/BTF/reference/run_modern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the modern (calibration) model — run_modern","text":"modern_elevation dataframe modern elevations modern_species dataframe modern counts (sorted sort_modern) dx elevation interval spacing spline knots. Defaults 0.2. ChainNums number MCMC chains run n.iter number iterations n.burnin number burnin samples n.thin number thinning validation.run Set TRUE running validation sigma_z_priors provide priors foram variability available fold Fold number CV","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_modern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the modern (calibration) model — run_modern","text":"Nothing returned, relevant data saved.","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_modern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the modern (calibration) model — run_modern","text":"","code":"test_modern_mod <- run_modern(modern_elevation = NJ_modern_elevation,                               modern_species = NJ_modern_species,                               n.iter = 10,                               n.burnin = 1,                               n.thin = 1) #> Start chain ID  1  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 1 has finished!  #> Start chain ID  2  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 2 has finished!  #> Start chain ID  3  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 3 has finished!  #> Run complete!  #> Error in sample.int(x, size, replace, prob): invalid 'size' argument"},{"path":"https://ncahill89.github.io/BTF/reference/run_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Carry out a validation — run_valid","title":"Carry out a validation — run_valid","text":"Carry validation","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carry out a validation — run_valid","text":"","code":"run_valid(   modern_elevation = NULL,   modern_species = NULL,   n_folds = 1,   use_uniform_prior = FALSE,   dx = 0.2 )"},{"path":"https://ncahill89.github.io/BTF/reference/run_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carry out a validation — run_valid","text":"modern_elevation dataframe modern elevations modern_species dataframe modern counts (sorted sort_modern) n_folds Number folds CV use_uniform_prior change prior elevation uniform dx elevation interval spacing spline knots. Defaults 0.2.","code":""},{"path":"https://ncahill89.github.io/BTF/reference/run_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carry out a validation — run_valid","text":"table validation results","code":""},{"path":"https://ncahill89.github.io/BTF/reference/sort_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort core dataset to be compatible with the sorted modern data — sort_core","title":"Sort core dataset to be compatible with the sorted modern data — sort_core","text":"Sort core dataset compatible sorted modern data","code":""},{"path":"https://ncahill89.github.io/BTF/reference/sort_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort core dataset to be compatible with the sorted modern data — sort_core","text":"","code":"sort_core(core_dat, species_names)"},{"path":"https://ncahill89.github.io/BTF/reference/sort_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort core dataset to be compatible with the sorted modern data — sort_core","text":"core_dat data object containing core species counts species_names list species names returned sort_modern","code":""},{"path":"https://ncahill89.github.io/BTF/reference/sort_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort core dataset to be compatible with the sorted modern data — sort_core","text":"Returns sorted core data species columns compatible modern data returned sort_modern","code":""},{"path":"https://ncahill89.github.io/BTF/reference/sort_modern.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort modern species dataset based on total count size — sort_modern","title":"Sort modern species dataset based on total count size — sort_modern","text":"Sort modern species dataset based total count size","code":""},{"path":"https://ncahill89.github.io/BTF/reference/sort_modern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort modern species dataset based on total count size — sort_modern","text":"","code":"sort_modern(modern_dat)"},{"path":"https://ncahill89.github.io/BTF/reference/sort_modern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort modern species dataset based on total count size — sort_modern","text":"modern_dat modern data object containing species counts","code":""},{"path":"https://ncahill89.github.io/BTF/reference/sort_modern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort modern species dataset based on total count size — sort_modern","text":"Returns modern dataset sorted based species count size, well sorted species names index first species contains zero counts ()","code":""},{"path":"https://ncahill89.github.io/BTF/reference/swli_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SWLI estimates and uncertainty — swli_results","title":"Get SWLI estimates and uncertainty — swli_results","text":"Get SWLI estimates uncertainty","code":""},{"path":"https://ncahill89.github.io/BTF/reference/swli_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SWLI estimates and uncertainty — swli_results","text":"","code":"swli_results(obj)"},{"path":"https://ncahill89.github.io/BTF/reference/swli_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SWLI estimates and uncertainty — swli_results","text":"obj object class BTF run_core","code":""},{"path":"https://ncahill89.github.io/BTF/reference/swli_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SWLI estimates and uncertainty — swli_results","text":"Table results plot","code":""},{"path":"https://ncahill89.github.io/BTF/reference/swli_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get SWLI estimates and uncertainty — swli_results","text":"","code":"test_modern_mod <- run_modern(modern_elevation = NJ_modern_elevation,                                 modern_species = NJ_modern_species,                                 n.iter = 10,                                 n.burnin = 1,                                 n.thin = 1) #> Start chain ID  1  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 1 has finished!  #> Start chain ID  2  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 2 has finished!  #> Start chain ID  3  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 175 #>    Unobserved stochastic nodes: 3136 #>    Total graph size: 20460 #>  #> Initializing model #>  #> Hooraah, Chain 3 has finished!  #> Run complete!  #> Error in sample.int(x, size, replace, prob): invalid 'size' argument test_core_mod <- run_core(test_modern_mod,                           core_species = NJ_core_species,                           n.iter = 10,                           n.burnin = 1,                           n.thin = 1) #> Error in sort_core(core_dat = select(core_dat, -\"Depth\"), species_names = obj$species_names): object 'test_modern_mod' not found swli_results(test_core_mod) #> Error in tibble::as_tibble(obj$SWLI): object 'test_core_mod' not found"}]
