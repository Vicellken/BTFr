% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/F_runcore.R
\name{run_core}
\alias{run_core}
\title{Run the core model}
\usage{
run_core(
  obj,
  core_species = NULL,
  prior_el = NULL,
  ChainNums = seq(1, 3),
  n.iter = 15000,
  n.burnin = 1000,
  n.thin = 7,
  validation.run = FALSE,
  use_uniform_prior = FALSE,
  parallel = TRUE,
  n_cores = NULL
)
}
\arguments{
\item{obj}{An object of class \code{BTFr} from \code{\link{run_modern}}}

\item{core_species}{Dataframe containing core species counts}

\item{prior_el}{prior elevations if available}

\item{ChainNums}{The number of MCMC chains}

\item{n.iter}{The number of MCMC iterations}

\item{n.burnin}{The number of burnin MCMC samples}

\item{n.thin}{The number of thinning}

\item{validation.run}{Set to TRUE if running validation}

\item{use_uniform_prior}{change prior on elevation to be uniform}

\item{parallel}{Logical. Whether to run MCMC chains in parallel. Default is TRUE}

\item{n_cores}{Number of CPU cores to use for parallel processing. If NULL, uses all available cores minus 1}
}
\value{
a list of objects including SWLI and an mcmc array with posterior samples
}
\description{
Run the core model
}
\examples{
\donttest{
test_modern_mod <- run_modern(
  modern_elevation = NJ_modern_elevation,
  modern_species = NJ_modern_species,
  n.iter = 10,
  n.burnin = 1,
  n.thin = 1,
  parallel = FALSE
)
# Run with parallel processing disabled for examples
test_core_mod <- run_core(test_modern_mod,
  core_species = NJ_core_species,
  n.iter = 10,
  n.burnin = 1,
  n.thin = 1,
  parallel = FALSE
)

# Run with parallel processing enabled (1 core for safety)
test_core_mod_par <- run_core(test_modern_mod,
  core_species = NJ_core_species,
  n.iter = 10,
  n.burnin = 1,
  n.thin = 1,
  parallel = TRUE,
  n_cores = 1
)
}
}
